<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Prediction Markets</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container">
      <a class="navbar-brand" href="/">Prediction Markets</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
          <li class="nav-item">
            <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#createMarketModal">Create Market</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#" id="loginBtn">Login</a>
          </li>
          <li class="nav-item d-none" id="userInfo">
            <span class="nav-link">
              <span id="username"></span> - Balance: $<span id="balance">0</span>
            </span>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <div class="container mt-4">
    <div class="row">
      <div class="col-12">
        <h1 class="mb-4">Active Prediction Markets</h1>
        
        <div id="marketsContainer" class="row">
          <% if (markets && markets.length > 0) { %>
            <% markets.forEach(market => { %>
              <div class="col-md-6 col-lg-4 mb-4">
                <div class="card h-100">
                  <div class="card-body">
                    <h5 class="card-title"><%= market.title %></h5>
                    <p class="card-text"><%= market.description %></p>
                    <div class="outcomes-list">
                      <% market.outcomes.forEach((outcome, index) => { %>
                        <div class="outcome-item">
                          <span class="outcome-name"><%= outcome %></span>
                          <% 
                            // Calculate the actual price/probability for this outcome
                            const calculatePrice = (q, b, outcomeIndex) => {
                              try {
                                // Handle the case when all quantities are zero (equal probabilities)
                                const allZeros = q.every(qi => qi === 0);
                                if (allZeros) {
                                  return 1 / q.length; // Equal probability for all outcomes
                                }
                                
                                // Handle invalid liquidity parameter
                                if (!b || b <= 0) {
                                  return 1 / q.length; // Fallback to equal probabilities
                                }
                                
                                const expSum = q.reduce((sum, qi) => sum + Math.exp(qi / b), 0);
                                const price = Math.exp(q[outcomeIndex] / b) / expSum;
                                
                                // Validate the calculated price
                                if (isNaN(price) || !isFinite(price)) {
                                  return 1 / q.length; // Fallback to equal probabilities
                                }
                                
                                return price;
                              } catch (error) {
                                return 1 / q.length; // Fallback to equal probabilities
                              }
                            };
                            
                            // Ensure market.quantities is an array
                            const quantities = Array.isArray(market.quantities) ? market.quantities : [];
                            const probability = (calculatePrice(quantities, market.liquidityParameter, index) * 100).toFixed(2);
                          %>
                          <div class="progress mb-2">
                            <div class="progress-bar" role="progressbar" 
                                 style="width: <%= probability %>%" 
                                 aria-valuenow="<%= probability %>" 
                                 aria-valuemin="0" aria-valuemax="100">
                              <%= probability %>%
                            </div>
                          </div>
                        </div>
                      <% }); %>
                    </div>
                    <a href="/market/<%= market.id %>" class="btn btn-primary mt-3">View Market</a>
                  </div>
                  <div class="card-footer text-muted">
                    Created: <%= new Date(market.created).toLocaleString() %>
                  </div>
                </div>
              </div>
            <% }); %>
          <% } else { %>
            <div class="col-12">
              <div class="alert alert-info">
                No prediction markets available. Be the first to create one!
              </div>
            </div>
          <% } %>
        </div>
      </div>
    </div>
  </div>

  <!-- Create Market Modal -->
  <div class="modal fade" id="createMarketModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Create New Prediction Market</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="createMarketForm">
            <div class="mb-3">
              <label for="marketTitle" class="form-label">Market Title</label>
              <input type="text" class="form-control" id="marketTitle" required>
            </div>
            <div class="mb-3">
              <label for="marketDescription" class="form-label">Description</label>
              <textarea class="form-control" id="marketDescription" rows="3" required></textarea>
            </div>
            <div class="mb-3">
              <label class="form-label">Outcomes</label>
              <div id="outcomesContainer">
                <div class="input-group mb-2">
                  <input type="text" class="form-control outcome-input" placeholder="Outcome 1" required>
                  <button type="button" class="btn btn-outline-danger remove-outcome" disabled>Remove</button>
                </div>
                <div class="input-group mb-2">
                  <input type="text" class="form-control outcome-input" placeholder="Outcome 2" required>
                  <button type="button" class="btn btn-outline-danger remove-outcome" disabled>Remove</button>
                </div>
              </div>
              <button type="button" class="btn btn-outline-primary btn-sm" id="addOutcomeBtn">Add Another Outcome</button>
            </div>
            <div class="mb-3">
              <label for="liquidityParameter" class="form-label">Liquidity Parameter (b)</label>
              <input type="number" class="form-control" id="liquidityParameter" min="1" value="100" required>
              <div class="form-text">Higher values make prices less sensitive to trades.</div>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="createMarketBtn">Create Market</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Login Modal -->
  <div class="modal fade" id="loginModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Login / Register</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="loginForm">
            <div class="mb-3">
              <label for="username" class="form-label">Username</label>
              <input type="text" class="form-control" id="usernameInput" required>
              <div class="form-text">Enter a username to login or register.</div>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="submitLoginBtn">Login / Register</button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <script src="/js/main.js"></script>
</body>
</html> 