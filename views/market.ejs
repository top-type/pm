<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= market.title %> | Prediction Markets</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container">
      <a class="navbar-brand" href="/">Prediction Markets</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
          <li class="nav-item">
            <a class="nav-link" href="/">All Markets</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#" id="loginBtn">Login</a>
          </li>
          <li class="nav-item d-none" id="userInfo">
            <span class="nav-link">
              <span id="username"></span> - Balance: $<span id="balance">0</span>
            </span>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <div class="container mt-4">
    <div class="row">
      <div class="col-12">
        <nav aria-label="breadcrumb">
          <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Markets</a></li>
            <li class="breadcrumb-item active" aria-current="page"><%= market.title %></li>
          </ol>
        </nav>
      </div>
    </div>

    <div class="row">
      <div class="col-12">
        <div class="card mb-4">
          <div class="card-body">
            <h1 class="card-title"><%= market.title %></h1>
            <p class="card-text"><%= market.description %></p>
            <div class="text-muted mb-3">
              Created: <%= new Date(market.created).toLocaleString() %>
              <span class="ms-3">Liquidity Parameter (b): <%= market.liquidityParameter %></span>
            </div>
            
            <h4>Price History</h4>
            <div class="chart-container" style="position: relative; height:300px;">
              <canvas id="priceHistoryChart"></canvas>
            </div>
            
            <h4 class="mt-4">Current Probabilities</h4>
            <div class="row">
              <% market.outcomes.forEach((outcome, index) => { %>
                <% 
                  // Calculate the actual price/probability for this outcome
                  const calculatePrice = (q, b, outcomeIndex) => {
                    try {
                      // Handle the case when all quantities are zero (equal probabilities)
                      const allZeros = q.every(qi => qi === 0);
                      if (allZeros) {
                        return 1 / q.length; // Equal probability for all outcomes
                      }
                      
                      // Handle invalid liquidity parameter
                      if (!b || b <= 0) {
                        return 1 / q.length; // Fallback to equal probabilities
                      }
                      
                      const expSum = q.reduce((sum, qi) => sum + Math.exp(qi / b), 0);
                      const price = Math.exp(q[outcomeIndex] / b) / expSum;
                      
                      // Validate the calculated price
                      if (isNaN(price) || !isFinite(price)) {
                        return 1 / q.length; // Fallback to equal probabilities
                      }
                      
                      return price;
                    } catch (error) {
                      return 1 / q.length; // Fallback to equal probabilities
                    }
                  };
                  
                  // Ensure market.quantities is an array
                  const quantities = Array.isArray(market.quantities) ? market.quantities : [];
                  const probability = (calculatePrice(quantities, market.liquidityParameter, index) * 100).toFixed(2);
                %>
                <div class="col-md-4 mb-3">
                  <div class="card">
                    <div class="card-body">
                      <h5 class="card-title"><%= outcome %></h5>
                      <div class="progress mb-2">
                        <div class="progress-bar" role="progressbar" 
                             style="width: <%= probability %>%" 
                             aria-valuenow="<%= probability %>" 
                             aria-valuemin="0" aria-valuemax="100">
                          <span class="probability-badge" data-index="<%= index %>">
                            <%= probability %>%
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              <% }); %>
            </div>
            
            <div class="mt-4">
              <h4>Place a Bet</h4>
              <div class="alert alert-warning d-none" id="loginAlert">
                Please login to place bets.
                <button type="button" class="btn btn-sm btn-primary ms-2" id="loginBtnAlert">Login</button>
              </div>
              
              <div id="betForm" class="d-none">
                <!-- User's current position in this market -->
                <div class="row g-3 align-items-center">
                  <div class="col-md-5">
                    <label for="outcomeSelect" class="form-label">Outcome</label>
                    <select class="form-select" id="outcomeSelect">
                      <% market.outcomes.forEach((outcome, index) => { %>
                        <option value="<%= index %>"><%= outcome %></option>
                      <% }); %>
                    </select>
                  </div>
                  <div class="col-md-4">
                    <label for="betAmount" class="form-label">Amount</label>
                    <div class="input-group">
                      <span class="input-group-text">$</span>
                      <input type="number" class="form-control" id="betAmount" min="1" value="10">
                    </div>
                  </div>
                  <div class="col-md-3 d-flex align-items-end">
                    <button type="button" class="btn btn-primary w-100" id="placeBetBtn">Place Bet</button>
                  </div>
                </div>
                <div class="mt-2">
                  <div class="form-text" id="betCostEstimate"></div>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <!-- User Position Section - Moved outside of bet form -->
        <div class="card mb-4" id="userPositionContainer">
          <div class="card-header">
            <h4 class="mb-0">Your Position</h4>
          </div>
          <div class="card-body">
            <div class="alert alert-info" id="noPositionAlert">
              You haven't placed any bets in this market yet.
            </div>
            <div class="table-responsive d-none" id="userPositionTable">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th>Outcome</th>
                    <th>Current Probability</th>
                    <th>Your Position</th>
                    <th>Total Cost</th>
                    <th>Avg. Cost/Share</th>
                  </tr>
                </thead>
                <tbody id="userPositionTableBody">
                  <!-- Position rows will be added here dynamically -->
                </tbody>
              </table>
            </div>
          </div>
        </div>
        
        <div class="card">
          <div class="card-header">
            <h4 class="mb-0">Recent Bets</h4>
          </div>
          <div class="card-body">
            <div id="betsContainer">
              <% if (market.bets && market.bets.length > 0) { %>
                <div class="table-responsive">
                  <table class="table table-hover">
                    <thead>
                      <tr>
                        <th>User</th>
                        <th>Outcome</th>
                        <th>Amount</th>
                        <th>Cost</th>
                        <th>Time</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% market.bets.slice().reverse().forEach(bet => { %>
                        <tr>
                          <td><%= bet.username %></td>
                          <td><%= market.outcomes[bet.outcomeIndex] %></td>
                          <td><%= bet.amount %></td>
                          <td>$<%= bet.cost.toFixed(2) %></td>
                          <td><%= new Date(bet.timestamp).toLocaleString() %></td>
                        </tr>
                      <% }); %>
                    </tbody>
                  </table>
                </div>
              <% } else { %>
                <div class="alert alert-info">
                  No bets have been placed yet. Be the first to bet!
                </div>
              <% } %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Login Modal -->
  <div class="modal fade" id="loginModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Login / Register</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="loginForm">
            <div class="mb-3">
              <label for="username" class="form-label">Username</label>
              <input type="text" class="form-control" id="usernameInput" required>
              <div class="form-text">Enter a username to login or register.</div>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="submitLoginBtn">Login / Register</button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/luxon@3.0.1/build/global/luxon.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-luxon@1.0.0/dist/chartjs-adapter-luxon.min.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    // Market data
    const marketId = <%= market.id %>;
    const marketOutcomes = <%- JSON.stringify(market.outcomes) %>;
    const initialQuantities = <%- JSON.stringify(market.quantities) %>;
    const liquidityParameter = <%= market.liquidityParameter %>;
    const initialPriceHistory = <%- JSON.stringify(market.priceHistory) %>;
  </script>
  <script src="/js/market.js"></script>
</body>
</html> 